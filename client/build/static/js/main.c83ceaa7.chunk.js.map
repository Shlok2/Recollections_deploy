{"version":3,"sources":["images/destination.png","images/memories-Text.png","images/404_error.jpg","reducers/auth.js","constants/actionTypes.js","reducers/index.js","reducers/posts.js","components/Navbar/styles.js","components/Navbar/Navbar.js","api/index.js","actions/posts.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","components/Pagination/styles.js","components/Pagination/pagination.jsx","components/Home/styles.js","components/Home/Home.js","components/Auth/styles.js","components/Auth/Input.js","actions/auth.js","components/Auth/Auth.js","components/PostDetails/styles.js","components/PostDetails/CommentSection.jsx","components/PostDetails/PostDetails.jsx","components/ErrorPage/styles.js","components/ErrorPage/ErrorPage.js","App.js","index.js"],"names":["module","exports","authReducer","state","authData","action","type","localStorage","setItem","JSON","stringify","data","clear","combineReducers","posts","isLoading","payload","currentPage","numberOfPages","post","map","_id","filter","auth","makeStyles","theme","appBar","borderRadius","margin","display","flexDirection","justifyContent","alignItems","padding","breakpoints","down","heading","color","palette","primary","main","textDecoration","fontSize","fontWeight","image","marginLeft","marginTop","toolbar","width","profile","logout","userName","textAlign","brandContainer","purple","getContrastText","deepPurple","backgroundColor","Navbar","classes","useStyles","useState","parse","getItem","user","setUser","dispatch","useDispatch","history","useHistory","location","useLocation","push","useEffect","token","decode","exp","Date","getTime","AppBar","className","position","to","src","memoriesTest","alt","height","memoriesLogo","Toolbar","Avatar","result","name","charAt","picture","Typography","variant","Button","onClick","component","Link","API","axios","create","baseURL","interceptors","request","use","req","headers","Authorization","fetchPost","id","get","fetchPosts","page","fetchPostsBySearch","searchQuery","search","tags","updatePost","updatedPost","patch","deletePost","delete","likePost","comment","value","signIn","formData","signUp","i","getPostsBySearch","api","console","log","commentPost","comments","media","paddingTop","backgroundBlendMode","border","fullHeightCard","card","overlay","top","left","overlay2","right","grid","details","title","cardActions","cardAction","Post","setCurrentId","likes","handleLike","Likes","length","find","like","googleId","Card","raised","elevation","ButtonBase","CardMedia","selectedFile","moment","createdAt","fromNow","creator","e","stopPropagation","style","size","tag","gutterBottom","CardContent","message","CardActions","disabled","mainContainer","smMargin","spacing","Posts","useSelector","CircularProgress","Grid","container","key","item","xs","sm","md","lg","root","paper","form","flexWrap","fileInput","buttonSubmit","marginBottom","Form","currentId","postData","setPostData","p","Paper","align","autoComplete","noValidate","onSubmit","preventDefault","newPost","createPost","TextField","label","fullWidth","onChange","target","split","multiple","onDone","base64","ul","Paginate","getPosts","Pagination","count","Number","renderItem","PaginationItem","appBarSearch","pagination","gridContainer","Home","query","URLSearchParams","setSearch","setTags","searchPost","trim","join","Grow","in","Container","maxWidth","onKeyPress","keyCode","onAdd","onDelete","tagToDelete","searchButton","avatar","secondary","submit","googleButton","Input","half","handleChange","autoFocus","handleShowPassword","required","InputProps","endAdornment","InputAdornment","IconButton","Auth","showPassoword","setShowPassoword","isSignup","setIsSignup","firstName","lastName","email","password","confirmPassword","setFormData","googleSuccess","res","credential","jwt_decode","error","signup","signin","prevShowPassoword","shape","onSuccess","onError","prevIsSignup","objectFit","maxHeight","section","flex","imageSection","recommendedPosts","loadingPaper","commentsOuterContainer","commentsInnerContainer","overflow","marginRight","CommentSection","setComments","setComment","commentsRef","useRef","handleClick","finalComment","newComments","current","scrollIntoView","behavior","c","ref","minRows","multiline","PostDetails","useParams","getPost","Divider","cursor","openPost","ErrorPage","errorImage","App","clientId","path","exact","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c83ceaa7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/destination.5b53f70c.png\";","module.exports = __webpack_public_path__ + \"static/media/memories-Text.6c7b5ec0.png\";","module.exports = __webpack_public_path__ + \"static/media/404_error.c9993683.jpg\";","import { AUTH,LOGOUT } from '../constants/actionTypes';\r\n\r\nconst authReducer = (state = { authData: null },action) => {\r\n    switch (action.type) {\r\n        case AUTH:\r\n            // Send all the data like name , profilephoto, etc. to local storage.\r\n            localStorage.setItem('profile', JSON.stringify({ ...action?.data }));\r\n            return { ...state,authData: action?.data };\r\n\r\n        case LOGOUT:\r\n            // Clear the localstorage as if user log out then there\r\n            // should be no name, profilephoto, etc of that user.\r\n            localStorage.clear();\r\n            return { ...state,authData: null };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","// This contains all constants needed in (reducers) and (components > posts) \r\n// So that we can make our code less prone for spelling errors.\r\n\r\nexport const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\nexport const FETCH_POST = 'FETCH_POST';\r\nexport const FETCH_BY_SEARCH = 'FETCH_BY_SEARCH';\r\nexport const LIKE = 'LIKE';\r\nexport const COMMENT = 'COMMENT';\r\n\r\n// For loading\r\nexport const START_LOADING = 'START_LOADING';\r\nexport const END_LOADING = 'END_LOADING';\r\n\r\nexport const AUTH = 'AUTH';\r\nexport const LOGOUT = 'LOGOUT';","import { combineReducers } from \"redux\";\r\nimport posts from './posts';\r\nimport auth from './auth';\r\n\r\n// in here we will mention all the reducers we have.\r\nexport default combineReducers({\r\n    posts: posts,\r\n    auth: auth\r\n});\r\n// export const reducers = combineReducers({ posts, auth });","// reducer is a function that accepts state and action, and based on \r\n// action type we do particular action on state.\r\n// state returns empty Array([]) if in function no other output of state is returned. \r\n// state is posts.\r\nimport {FETCH_ALL,FETCH_BY_SEARCH,FETCH_POST,CREATE,UPDATE,DELETE,LIKE,COMMENT,START_LOADING,END_LOADING} from '../constants/actionTypes';\r\n\r\nexport default (state = { isLoading:true, posts: [] },action) => {\r\n    switch(action.type){\r\n        case START_LOADING:\r\n            return { ...state,isLoading: true }\r\n        \r\n        case END_LOADING:\r\n            return { ...state,isLoading: false }\r\n\r\n        // action.payload is actual post(data) we got from ACTION.\r\n        case FETCH_ALL:\r\n            return {\r\n                ...state,\r\n                posts: action.payload.data,\r\n                currentPage: action.payload.currentPage,\r\n                numberOfPages: action.payload.numberOfPages\r\n            };\r\n\r\n        // action.payload is data got from action.\r\n        case FETCH_BY_SEARCH:\r\n            return {\r\n                ...state,\r\n                posts: action.payload\r\n            };\r\n\r\n        case FETCH_POST:\r\n            return {...state,post: action.payload};\r\n\r\n        // This action.payload contains information of new post -> hence\r\n        // add this information to previous posts array.\r\n        case CREATE:\r\n            return { ...state, posts: [...state.posts,action.payload]}\r\n\r\n        // In this action.payload contains updated message id, if this id = post.id we want\r\n        // to edit -> then update it or else remain it same.\r\n        case UPDATE:\r\n            return { ...state, posts: state.posts.map((post) => post._id === action.payload._id ? action.payload : post)}\r\n\r\n        // Keep all the post except where id == action.payload.\r\n        case DELETE:\r\n            return { ...state, posts: state.posts.filter((post) => post._id !== action.payload)}\r\n\r\n        case LIKE:\r\n            return { ...state, posts: state.posts.map((post) => post._id === action.payload._id ? action.payload : post)}\r\n\r\n        case COMMENT:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map((post) => {\r\n                    // return all the other post normally...\r\n                    // and change the post that just recieved a comment...\r\n                    if(post._id === action.payload._id) {\r\n                        return action.payload;\r\n                    }\r\n                    \r\n                    return post;\r\n                })\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '10px 50px',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  heading: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    fontSize: '2em',\r\n    fontWeight: 300,\r\n  },\r\n  image: {\r\n    marginLeft: '10px',\r\n    marginTop: '5px',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    width: '400px',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 'auto',\r\n    },\r\n  },\r\n  profile: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '400px',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 'auto',\r\n      marginTop: 20,\r\n      justifyContent: 'center',\r\n    },\r\n  },\r\n  logout: {\r\n    marginLeft: '20px',\r\n  },\r\n  userName: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n  },\r\n  brandContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n}));","import React,{useState,useEffect} from 'react'\r\nimport { AppBar,Avatar,Typography,Toolbar,Button } from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory,useLocation } from 'react-router-dom';\r\n\r\nimport decode from 'jwt-decode';\r\nimport useStyles from './styles';\r\nimport memoriesLogo from '../../images/destination.png';\r\nimport memoriesTest from '../../images/memories-Text.png';\r\n\r\nconst Navbar = () => {\r\n\r\n    const classes = useStyles();\r\n    // localStorage.getItem will retreve the data of localStorage which is put into\r\n    // in reducers>auth.js.\r\n    const [user,setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    // console.log(user);\r\n\r\n    const logout = () => {\r\n        dispatch({ type: 'LOGOUT' });\r\n        // take user to home route.\r\n        history.push('/');\r\n        // After logout -> user = null.\r\n        setUser(null);\r\n    }\r\n\r\n    // When location changes from '/auth' to '/', useEffect activates and\r\n    // reload the profile part in navbar.\r\n    useEffect(() => {\r\n        // if token exists.\r\n        const token = user?.token;\r\n\r\n        if(token){\r\n            const decodedToken = decode(token);\r\n            // If token expiry time(* 1000 means in milisec) is lower than \r\n            // current time, that means token time is over and hence logout\r\n            // current user. \r\n            if(decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n        }\r\n\r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n    }, [location]);\r\n\r\n    return (\r\n        <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n            <Link to='/' className={classes.brandContainer}>\r\n\r\n                <img src={memoriesTest} alt=\"icon\" height=\"45px\" />\r\n                <img className={classes.image} src={memoriesLogo} alt=\"icon\" height= \"40\" />\r\n            </Link>\r\n            <Toolbar className={classes.toolbar}>\r\n                {user ? (\r\n                    <div className={classes.profile}>\r\n                        {/* If user dont have any profile photo -> user.result.name.charAt(0) show first letter of user name as avatar */}\r\n                        <Avatar className={classes.purple} alt={user.result.name.charAt(0)} src = {user.result.picture}>{user.result.name.charAt(0)}</Avatar>\r\n                        <Typography className={classes.userName} variant=\"h6\">{user.result.name}</Typography>\r\n                        <Button variant='contained' className={classes.logout} color=\"secondary\" onClick={logout} >Logout</Button>\r\n                    </div>\r\n                ) : (\r\n                    <Button component={Link} to=\"/auth\" variant='contained' color=\"primary\">Sign In</Button>\r\n                )}\r\n            </Toolbar>\r\n        </AppBar>\r\n  );\r\n}\r\n\r\nexport default Navbar;","// Api is connecting both server and client folders.\r\n\r\n// All data is stored on server and when we want to take the filtered\r\n// data (like only mobile brand names) then only that data is fetched.\r\n// Api is called only once.\r\n// axios is npm.\r\n// If we have API link then we can get its data(json) using axios.\r\nimport axios from \"axios\";\r\n\r\nconst API = axios.create({ baseURL: \"http://localhost:5000\" });\r\n// const API = axios.create({ baseURL: \"http://localhost:5000\" });\r\n\r\n// This url returns all the posts in database.\r\n// const url = 'http://localhost:5000/posts';\r\n\r\n// This function will happen on each of our request.\r\n// This is important for our middleware in server folder.\r\n// We need to send our token back to backend so that it can verify\r\n// that user is logged in or not.\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem(\"profile\")) {\r\n    req.headers.Authorization = `Bearer ${\r\n      JSON.parse(localStorage.getItem(\"profile\")).token\r\n    }`;\r\n  }\r\n  return req;\r\n});\r\n\r\n// To get all posts data in form of array.\r\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\r\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\r\nexport const fetchPostsBySearch = (searchQuery) =>\r\n  API.get(\r\n    `/posts/search?searchQuery=${searchQuery.search || \"none\"}&tags=${\r\n      searchQuery.tags\r\n    }`\r\n  );\r\nexport const createPost = (newPost) => API.post(\"/posts\", newPost);\r\nexport const updatePost = (id, updatedPost) =>\r\n  API.patch(`/posts/${id}`, updatedPost);\r\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\r\nexport const likePost = (id, updatedPost) => API.patch(`/posts/${id}/likePost`);\r\n// pass the value with it.\r\nexport const comment = (value, id) =>\r\n  API.post(`/posts/${id}/commentPost`, { value });\r\n\r\n// This is for singin and signup.\r\nexport const signIn = (formData) => API.post(\"/user/signin\", formData);\r\nexport const signUp = (formData) => API.post(\"/user/signup\", formData);\r\n","import {FETCH_ALL,FETCH_BY_SEARCH, FETCH_POST, START_LOADING, END_LOADING, CREATE, UPDATE, DELETE, LIKE, COMMENT} from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n\r\n    // {data} is an object inside api.\r\n    try {\r\n\r\n        // This will start loading till all posts loaded.\r\n        dispatch({ type: START_LOADING });\r\n\r\n        const {data} = await api.fetchPost(id);\r\n        // console.log(data);\r\n\r\n        dispatch({type: FETCH_POST, payload: data});\r\n        dispatch({ type: END_LOADING });\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n// Action creator are functions that returns actions.\r\n// async (dispatch) is by redux-thunk.\r\n// getPosts function will be used in app.js\r\nexport const getPosts = (page) => async (dispatch) => {\r\n\r\n    // {data} is an object inside api.\r\n    try {\r\n\r\n        // This will start loading till all posts loaded.\r\n        dispatch({ type: START_LOADING });\r\n\r\n        const {data} = await api.fetchPosts(page);\r\n        console.log(data);\r\n\r\n        dispatch({type: FETCH_ALL, payload: data});\r\n        dispatch({ type: END_LOADING });\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    // Format of actions.\r\n    // const action = {type: 'FETCH_ALL' , payload: []}\r\n\r\n    // dispatch(action);\r\n};\r\n\r\n\r\n\r\nexport const getPostsBySearch = (searchQuery) => async(dispatch) => {\r\n    try {\r\n        dispatch({ type: START_LOADING });\r\n\r\n        const {data: {data}} = await api.fetchPostsBySearch(searchQuery);\r\n        dispatch({ type: FETCH_BY_SEARCH, payload: data });\r\n\r\n        dispatch({ type: END_LOADING });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const createPost = (post, history) => async (dispatch) => {\r\n    // This is making a post api request to backend server.\r\n    try {\r\n        dispatch({ type: START_LOADING });\r\n\r\n        const {data} = await api.createPost(post);\r\n        history.push(`/posts/${data._id}`);\r\n        dispatch({type: CREATE , payload: data});\r\n\r\n        dispatch({ type: END_LOADING });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id,post) => async (dispatch) => {\r\n    // It returns updated post.\r\n    try {\r\n        const {data} = await api.updatePost(id,post);\r\n        dispatch({ type: UPDATE, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n\r\n        dispatch({ type: DELETE, payload: id });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async(dispatch) => {\r\n    try {\r\n\r\n        const {data} = await api.likePost(id);\r\n        dispatch({type: LIKE, payload: data});\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const commentPost = (value, id) => async(dispatch) => {\r\n    try {\r\n        // console.log(\"sdkjflkfjksdjfkdsjfksdfkdsjakf\");\r\n        const {data} = await api.comment(value,id);\r\n        dispatch({ type:COMMENT, payload: data });\r\n        return data.comments;\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cardAction: {\r\n    display: 'block',\r\n    textAlign: 'initial',\r\n  },\r\n});","import React,{ useState } from 'react';\r\nimport {Card,CardActions,CardMedia,Button,Typography, CardContent, ButtonBase} from '@material-ui/core';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\nimport useStyles from './styles';\r\nimport {useDispatch} from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport {deletePost, likePost} from '../../../actions/posts';\r\n\r\n// post passed as prop(from posts.js).\r\nconst Post = ({ post,setCurrentId }) => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const [likes,setLikes] = useState(post?.likes);\r\n\r\n    const handleLike = async () => {\r\n        dispatch(likePost(post._id))\r\n    }\r\n\r\n    const Likes = () => {\r\n        if (post.likes.length > 0) {\r\n          return post.likes.find((like) => like === (user?.result?.googleId || user?.result?._id))\r\n            ? (\r\n              <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{post.likes.length > 2 ? `You and ${post.likes.length - 1} others` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}` }</>\r\n            ) : (\r\n              <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}</>\r\n            );\r\n        }\r\n\r\n      return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;\r\n    };\r\n\r\n    // Go to loacation /posts/id\r\n    const openPost = () => history.push(`/posts/${post._id}`);\r\n    \r\n    return (\r\n        <Card className={classes.card} raised elevation={6} >\r\n            <ButtonBase className={classes.cardAction} onClick={openPost}>\r\n            <CardMedia className={classes.media} image={post.selectedFile} title={post.title} />\r\n                <div className={classes.overlay}>\r\n                    <Typography variant=\"h6\">{post.name}</Typography>\r\n                    {/* moment.fromNow -> it tell how ago (eg-> 2 years ago) */}\r\n                    <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n                </div>\r\n                    {/* MoreHorizIcon -> ... icon */}\r\n                    {/* Here we finally used setCurrentId function imported from Posts.js and it\r\n                    recieved it from app.js. */}\r\n                {/* {console.log(post)} */}\r\n                {(user?.result?.name === post?.name || user?.result?._id === post?.creator) && (\r\n                    <div className={classes.overlay2} name=\"edit\">\r\n                        <Button\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            setCurrentId(post._id);\r\n                        }}\r\n                        style={{ color: 'white' }}\r\n                        size=\"small\"\r\n                        >\r\n                        <MoreHorizIcon fontSize=\"medium\" />\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n                <div className={classes.details}>\r\n                    <Typography variant='body2' color='textSecondary'>{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n                </div>\r\n                <Typography className={classes.title} variant='h5' gutterBottom>{post.title}</Typography>\r\n                {/* gutterBottom adds margin to the bottom of component. */}\r\n                <CardContent>\r\n                    <Typography variant='body2' color='textSecondary' component='p'>{post.message}</Typography>\r\n                </CardContent>\r\n            </ButtonBase>\r\n\r\n            <CardActions className={classes.cardActions}>\r\n                <Button size='small' color='primary' disabled={!user?.result} onClick={handleLike}>\r\n                    <Likes/>\r\n                </Button>\r\n                {/* If current loggedin google user is same as the person created the post || or the \r\n                person is a manual logged in user. -> Then only show delete post button.*/}\r\n                {/* {(user?.result?.name === post?.name || user?.result?._id === post?.creator) && ( */}\r\n                {(user?.result?.name === post?.name || user?.result?._id === post?.creator) && (\r\n                <Button size='small' color='primary'  onClick={() => dispatch(deletePost(post._id))}>\r\n                    <DeleteIcon fontSize='small' />\r\n                    Delete\r\n                </Button>\r\n                )}\r\n                {/* )} */}\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\nexport default Post;","import { makeStyles } from '@material-ui/core/styles';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    borderRadius: 15,\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '10px 50px',\r\n  },\r\n  heading: {\r\n    color: 'rgba(0,183,255, 1)',\r\n    textDecoration: 'none',\r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    width: '400px',\r\n  },\r\n  profile: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '400px',\r\n  },\r\n  userName: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  brandContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n  [theme.breakpoints.down('sm')]: {\r\n    appBar: {\r\n      padding: '10px 20px',\r\n    },\r\n    heading: {\r\n      display: 'none',\r\n    },\r\n    userName: {\r\n      display: 'none',\r\n    },\r\n    image: {\r\n      marginLeft: '5px',\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      width: '160px',\r\n    },\r\n  },\r\n  actionDiv: {\r\n    textAlign: 'center',\r\n  },\r\n}));","import React from 'react';\r\nimport Post from \"./Post/Post\"\r\nimport {Grid,CircularProgress} from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport useStyles from \"./styles\";\r\n\r\n// setCurrentId as prop (from app.js).\r\nconst Posts = ({ setCurrentId }) => {\r\n    const classes = useStyles();\r\n\r\n    // in reducers>index.js -> we exported posts.\r\n    const {posts, isLoading} = useSelector((state) => state.posts);\r\n    // console.log(posts);\r\n\r\n    if(!posts.length && !isLoading) return 'No Posts';\r\n    \r\n    return (\r\n        // If there is no post -> Show loading Sign else show posts in grid format .\r\n        isLoading ? <CircularProgress/> : (\r\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n                {posts.map((post) => (\r\n                    <Grid key={post._id} item xs={12} sm={12} md={6} lg={3}>\r\n                        {/* Here the prop is used */}\r\n                        <Post post={post} setCurrentId = {setCurrentId}/>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        )\r\n    );\r\n}\r\nexport default Posts;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));","import React,{useState,useEffect} from 'react';\r\nimport { TextField,Button,Typography,Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport useStyles from './styles';\r\nimport {createPost,updatePost} from '../../actions/posts';\r\n\r\n// Paper is like a div buy with white background.\r\n// props from app.js\r\nconst Form = ({currentId,setCurrentId}) => {\r\n    const [postData,setPostData] = useState({\r\n        title:'',message:'',tags:'',selectedFile:''\r\n    });\r\n    // We find post inside Posts array.\r\n    const post = useSelector((state) => currentId ? state.posts.posts.find((p) => p._id === currentId) : null);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const history = useHistory();\r\n\r\n    // If post value changes then we run this function.\r\n    useEffect(() => {\r\n        if(post) setPostData(post);\r\n    }, [post])\r\n\r\n    // e -> event ; e.preventDefault() -> is to prevent page from refreshing.\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // If currentId != 0;\r\n        if(currentId){\r\n            dispatch(updatePost(currentId, { ...postData,name:user?.result?.name }));\r\n            // clear() function is defined below.\r\n            clear();\r\n        // If currentId == 0; \r\n        } else {       \r\n            // post data is a hook(state).\r\n            dispatch(createPost({...postData,name: user?.result?.name},history));\r\n            clear();\r\n        }\r\n    }\r\n\r\n    if(!user?.result?.name){\r\n        return(\r\n            <Paper className={classes.paper}>\r\n                <Typography variant='h6' align='center'>\r\n                    Please Sign In to create your own memories and like other's memories.\r\n                </Typography>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n    const clear = () => {\r\n        // set current id to null -> see (Typograph) in return.\r\n        setCurrentId(null);\r\n        setPostData({title:'',message:'',tags:'',selectedFile:''});\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper} elevation={6}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography variant='h6'>{currentId ? 'Editing' : 'Creating'} a Memory</Typography>\r\n                {/* // when something is changed in this textfield then only change\r\n                // the value of creator from hook and rest properties remains same(...postData) */}\r\n                <TextField name='title' variant='outlined' label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData,title:e.target.value })}/>\r\n                <TextField name='message' variant='outlined' label=\"Message\" fullWidth value={postData.message} onChange={(e) => setPostData({ ...postData,message:e.target.value })}/>\r\n                <TextField name='tags' variant='outlined' label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData,tags:e.target.value.split(',') })}/>\r\n                {/* This stores image in string format. Base63 is used for that.*/}\r\n                <div className={classes.fileInput}>\r\n                    <FileBase type = 'file' multiple = {false} onDone={({base64}) => setPostData({...postData, selectedFile: base64})}/>\r\n                </div>\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size='large' type='submit' fullWidth>Submit</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" size='small' onClick={clear} fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    );\r\n}\r\nexport default Form;","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles(() => ({\r\n    ul: {\r\n        justifyContent: 'space-around',\r\n    }\r\n}))","import React,{ useEffect } from \"react\";\r\nimport {Pagination,PaginationItem} from '@material-ui/lab';\r\nimport {Link} from 'react-router-dom';\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport {getPosts} from '../../actions/posts';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Paginate = ({page}) => {\r\n    const {numberOfPages} = useSelector((state) => state.posts);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        if(page) dispatch(getPosts(page));\r\n\r\n    }, [page]);\r\n\r\n    return (\r\n        <Pagination\r\n            classes={{ul:classes.ul}}\r\n            count = {numberOfPages}\r\n            page = {Number(page) || 1}\r\n            variant = \"outlined\"\r\n            color=\"primary\"\r\n            renderItem={(item) => (\r\n                <PaginationItem  {...item} component={Link} to={`/posts?page=${item.page}`}/>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Paginate;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBarSearch: {\r\n    borderRadius: 4,\r\n    marginBottom: '1rem',\r\n    display: 'flex',\r\n    padding: '16px',\r\n  },\r\n  pagination: {\r\n    borderRadius: 4,\r\n    marginTop: '1rem',\r\n    padding: '16px',\r\n  },\r\n  gridContainer: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'column-reverse',\r\n    },\r\n  },\r\n}));","import React,{useState,useEffect} from 'react';\r\nimport {Container, Grow, Grid, Paper, AppBar, TextField, Button} from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport ChipInput from 'material-ui-chip-input';\r\n\r\nimport {getPosts,getPostsBySearch} from '../../actions/posts';\r\nimport Posts from '../Posts/Posts';\r\nimport Form from '../Form/Form';\r\nimport Pagination from '../Pagination/pagination';\r\nimport { mergeClasses } from '@material-ui/styles';\r\nimport useStyles from './styles.js';\r\n\r\nfunction useQuery(){\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst Home = () => {\r\n\r\n    // It stores id of a post.\r\n    const [currentId,setCurrentId] = useState(null);\r\n    // This is css file.\r\n    // const classes = useStyles();\r\n\r\n    // dispatch is used to use functions of 'actions'.\r\n    const dispatch = useDispatch();\r\n    const query = useQuery();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    // Check the url and if url have page parameter then page = that page parameter\r\n    // or else we will me on page 1.\r\n    const page = query.get('page') || 1;\r\n    const searchQuery = query.get('searchQuery');\r\n    const [search,setSearch] = useState('');\r\n    const [tags,setTags] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(getPosts());\r\n    // }, [currentId, dispatch]);\r\n\r\n    const searchPost = () => {\r\n        // search.trim -> removes empty spaces in between.\r\n        if(search.trim() || tags){\r\n            // dispatch -> fetch search post.\r\n            // tags.join(',') -> joins an array and make it a complete String with ',' in between.\r\n            dispatch(getPostsBySearch({search, tags: tags.join(',') }));\r\n            history.push(`/posts/search?searchQuery=${search || 'none'}&tags=${tags.join(',')}`);\r\n        } else { \r\n            // else go to home page.\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    const handleKeyPress = (e) => {\r\n        // 13 is enter key.\r\n        if(e.keyCode === 13){\r\n            // search post\r\n            searchPost();\r\n        }\r\n    }\r\n\r\n    const handleAdd = (tag) => setTags([...tags, tag]);\r\n    \r\n    const handleDelete = (tagToDelete) => setTags(tags.filter((tag) => tag !== tagToDelete));\r\n\r\n    return(\r\n    <Grow in>\r\n        <Container maxWidth=\"xl\">\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3} className={classes.gridContainer}>\r\n                <Grid item xs={12} sm={6} md={9}>\r\n                    <Posts setCurrentId={setCurrentId}/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <AppBar className={classes.appBarSearch} position = \"static\" color = \"inherit\">\r\n                        <TextField name='search' variant='outlined' label='Search Memories' onKeyPress={handleKeyPress} fullWidth value={search} onChange={(e) => setSearch(e.target.value)} />\r\n                        {/* To create a pill like design when searching for tags. */}\r\n                        <ChipInput style={{margin: '10px 0'}} value={tags} onAdd={handleAdd} onDelete={handleDelete} label=\"Search Tags\" variant='outlined' />\r\n                        <Button onClick={searchPost} className={classes.searchButton} variant=\"contained\" color=\"primary\" >Search</Button>\r\n                    </AppBar>\r\n                    <Form currentId={currentId} setCurrentId={setCurrentId}/>\r\n                    {!searchQuery && !tags.length && (\r\n                        <Paper elevation={6} className={classes.pagination}>\r\n                            <Pagination page={page} />\r\n                        </Paper>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    </Grow>\r\n    );\r\n};\r\n\r\nexport default Home;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(2),\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  googleButton: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));","// This file is to take input in Auth.js\r\n\r\nimport { TextField,Grid,InputAdornment,IconButton } from \"@material-ui/core\";\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport React from 'react';\r\n\r\n// name,half,etc are props.\r\n// Icon we are showing on right side of input for show password.\r\n// InputAdornment -> allow icon to put after input field. \r\nconst Input = ({name,half,handleChange,label,autoFocus,type,handleShowPassword}) => {\r\n  return (\r\n    <Grid item xs={12} sm={half ? 6 : 12}>\r\n        <TextField\r\n        name= {name}\r\n        onChange = {handleChange}\r\n        variant = \"outlined\"\r\n        required\r\n        fullWidth\r\n        label = {label}\r\n        autoFocus = {autoFocus}\r\n        type = {type}\r\n        \r\n        InputProps= {name === 'password' ? {\r\n            endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                    <IconButton onClick={handleShowPassword}>\r\n                        {type === \"password\" ? <Visibility/> : <VisibilityOff/>}\r\n                    </IconButton>\r\n                </InputAdornment>\r\n            )\r\n        } : null}\r\n        />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Input;","import { AUTH } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\nexport const signin = (formData,history) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.signIn(formData);\r\n\r\n        dispatch({type:AUTH, data});\r\n\r\n        history.push('/');\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const signup = (formData,history) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.signUp(formData);\r\n\r\n        dispatch({type:AUTH, data});\r\n        history.push('/');\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};","// Client Id - 54651485527-jnilbeqog1rmnvsfotdeosnb9pv5tcrh.apps.googleusercontent.com\r\n// Client Secret - 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\r\n\r\nimport React,{useState} from 'react';\r\nimport { Avatar,Button,Paper,Grid,Typography,Container } from '@material-ui/core';\r\n// import { GoogleLogin } from '@react-oauth/google';\r\nimport { GoogleLogin,googleLogout } from '@react-oauth/google';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\nimport useStyles from './styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Input from './Input';\r\nimport {signin,signup} from '../../actions/auth'; \r\n\r\nconst initialState= {firstName: '', lastName: '', email: '',password:'',confirmPassword: ''}\r\n\r\nconst Auth = () => {\r\n\r\n    const classes = useStyles();\r\n    const [showPassoword,setShowPassoword] = useState(false);\r\n    // isSignup = false -> you have to sign up.\r\n    const [isSignup,setIsSignup] = useState(false);\r\nconst initialState= {firstName: '', lastName: '', email: '',password:'',confirmPassword: ''}\r\n    const [formData, setFormData] = useState(initialState);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const handleShowPassword = () => setShowPassoword((prevShowPassoword) => !prevShowPassoword);\r\n\r\n    const handleSubmit = (e) => {\r\n        // To prevent from refreshing.\r\n        e.preventDefault();\r\n        \r\n        if(isSignup){\r\n            dispatch(signup(formData,history));\r\n        }\r\n        else{\r\n            dispatch(signin(formData,history));\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        // Only change the value on field we are on, eg we are on \r\n        // lastName -> e = lastName, then only lastName will be updating\r\n        // and rest all remains same.\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const switchMode = () => {\r\n        setIsSignup((prevIsSignup) => !prevIsSignup);\r\n        // Reset the show password when we switch mode from signup to signin\r\n        // and vice versa.\r\n        setShowPassoword(false);\r\n    };\r\n\r\n    const googleSuccess = async (res) => {\r\n        // Res.credential has all details like profile pic, name, email,etc\r\n        // but all of it is encrypted.\r\n        // It is a JWT and hence to decode this JWT we use jwt_decode library.\r\n        // sub is used as a unique identifier.\r\n        // const decoded: { name: string, picture: string, sub: string } = jwt_decode(res.credential);\r\n        // const {name,picture,sub} = decoded;\r\n\r\n        // const user = {\r\n        //     _id: sub,\r\n        //     _type: 'user',\r\n        //     userName: name,\r\n        //     image: picture\r\n        // }\r\n\r\n        // await axios.post(`http://localhost:3000/api/auth`, user);\r\n        // ?. does not throw error if obj does not exist it throws undefined\r\n        const token = res?.credential;\r\n        const result = jwt_decode(res?.credential);\r\n        // console.log(Object.values(temp(9)));\r\n        // console.log(temp.name);\r\n        // console.log(temp);\r\n        try {\r\n            dispatch({type:'AUTH' , data: {result,token}});\r\n            // Go to home page after dispatch.\r\n            history.push('/');\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const googleFailure = (error) => {\r\n        console.log(error);\r\n        console.log(\"Google Sign In was unsuccessful\");\r\n    };\r\n\r\n    return (\r\n        // Container centers content horizontally.\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Paper className={classes.paper} elevation={3}>\r\n                <Avatar className={classes.avatar}>\r\n                    {/* Lock icon */}\r\n                    <LockOutlinedIcon/>\r\n                </Avatar>\r\n                <Typography variant='h5'>{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        {isSignup && (\r\n                            <>\r\n                                <Input name='firstName' label='First Name' handleChange={handleChange} autoFocus half />        \r\n                                <Input name='lastName' label='Last Name' handleChange={handleChange} half/>                                   \r\n                            </>\r\n                        )}\r\n                        <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\r\n                        <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassoword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword} />\r\n\r\n                        {/* If isSignup == true -> then show Input */}\r\n                        { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\"/> }\r\n                    </Grid>\r\n\r\n                    <Button type = \"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                        {isSignup ? 'Sign Up' : 'Sign In'}\r\n                    </Button>\r\n\r\n                    {/* below is for previous version of oauth 1.0 */}\r\n                    {/* render is how is it gonna look like */}\r\n                    {/* <GoogleLogin\r\n                        clientId='54651485527-jnilbeqog1rmnvsfotdeosnb9pv5tcrh.apps.googleusercontent.com'\r\n                        render={(renderProps) => (\r\n                            <Button className={classes.googleButton} color = \"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon = {<Icon />} variant=\"contained\" >Google Sign In</Button>\r\n                        )}\r\n                        onSuccess={googleSuccess}\r\n                        onFailure={googleFailure}\r\n                        cookiePolicy=\"single_host_origin\"\r\n                    /> */}\r\n\r\n                    <GoogleLogin shape='rectangle' theme='filled_blue' size='medium' width='364'\r\n                        // render={(renderProps) => (\r\n                        //     <Button className={classes.googleButton} color = \"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon = {<Icon />} variant=\"contained\" >Google Sign In</Button>\r\n                        // )}\r\n\r\n                        onSuccess={googleSuccess}\r\n                        onError={googleFailure}\r\n                        \r\n                    />\r\n\r\n                    <Grid container justifyContent=\"flex-end\" >\r\n                            <Grid item>\r\n                                <Button onClick={switchMode}>\r\n                                    {isSignup ? \"Already have an account? Sign In\" : \"Don't have an account? Sign Up\"}\r\n                                </Button>\r\n                            </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Auth;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  media: {\r\n    borderRadius: '20px',\r\n    objectFit: 'cover',\r\n    width: '100%',\r\n    maxHeight: '600px',\r\n\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexWrap: 'wrap',\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  section: {\r\n    borderRadius: '20px',\r\n    margin: '10px',\r\n    flex: 1,\r\n  },\r\n  imageSection: {\r\n    marginLeft: '20px',\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  recommendedPosts: {\r\n    display: 'flex',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  loadingPaper: {\r\n    display: 'flex', justifyContent: 'center', alignItems: 'center', padding: '20px', borderRadius: '15px', height: '39vh',\r\n  },\r\n  commentsOuterContainer: {\r\n    display: 'flex', justifyContent: 'space-between',\r\n  },\r\n  commentsInnerContainer: {\r\n    height: '200px', overflow: 'auto', marginRight: '30px',\r\n  },\r\n}));","import React,{ useState, useRef } from \"react\";\r\nimport { Typography, TextField, Button } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport useStyles from './styles';\r\nimport {commentPost} from '../../actions/posts';\r\n\r\nconst CommentSection = ( post ) => {\r\n    // console.log(post);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [comments, setComments] = useState(post?.post?.comments);\r\n    const [comment,setComment] = useState('');\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const commentsRef = useRef();\r\n\r\n    const handleClick = async () => {\r\n        // Who wrote the comment and context of comment.\r\n        const finalComment = `${user.result.name}: ${comment}`;\r\n        // console.log(post._id);\r\n        const newComments = await dispatch(commentPost(finalComment, post.post._id));\r\n\r\n        setComments(newComments);\r\n        setComment('');\r\n\r\n        commentsRef.current.scrollIntoView({behavior: 'smooth'});\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.commentsOuterContainer} >\r\n                <div className={classes.commentsInnerContainer} >\r\n                    <Typography gutterBottom variant=\"h6\" >Comments</Typography>\r\n                    {/* c -> comment, i -> index */}\r\n                    {comments.map((c,i) => (\r\n                        <Typography key={i} gutterBottom variant=\"subtitle1\">\r\n                            <strong>{c.split(': ')[0]}</strong>\r\n                            {c.split(':')[1]}\r\n                        </Typography>\r\n                    ))}\r\n                    <div ref={commentsRef} />\r\n                </div>\r\n\r\n                {/* {console.log(post.post._id)} */}\r\n\r\n                {/* If user is logged in the show all the HTML elements of writing the comment. */}\r\n                {user?.result?.name && (\r\n                    <div style={{ width: '70%' }}>\r\n                        <Typography gutterBottom variant=\"h6\">Write a Comment</Typography>\r\n                        <TextField fullWidth minRows={4} variant=\"outlined\" label=\"Comment\" multiline value={comment} onChange={(e) => setComment(e.target.value)} />\r\n                        <Button style={{ marginTop: '10px' }} fullWidth disabled={!comment} color=\"primary\" variant=\"contained\" onClick={handleClick} >\r\n                            Comment\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentSection;","import React,{ useEffect } from 'react';\r\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport CommentSection from './CommentSection';\r\nimport { useParams,useHistory } from 'react-router-dom';\r\nimport {getPost,getPostsBySearch} from '../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst PostDetails = () => {\r\n\r\n  const {post,posts,isLoading} = useSelector((state) => state.posts);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const {id} = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPost(id));\r\n  },[id]);\r\n\r\n  // We are not concerned about search -> hence search->none.\r\n  // Filter out posts which have same tags.\r\n  useEffect(() => {\r\n    if(post) {\r\n      dispatch(getPostsBySearch({ search: 'none', tags: post?.tags.join(',') }));\r\n    }\r\n  }, [post]);\r\n\r\n  if(!post) return null;\r\n\r\n  if(isLoading){\r\n    return (<Paper elevation={6} className={classes.loadingPaper}>\r\n      <CircularProgress size=\"7em\"/>\r\n    </Paper>);\r\n  }\r\n\r\n  // As a post cannot be in its own recommendation.\r\n  const recommendedPosts = posts.filter(({_id}) => _id !== post._id);\r\n\r\n  const openPost = (_id) => history.push(`/posts/${_id}`);\r\n  \r\n  return (\r\n    <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\r\n      <div className={classes.card}>\r\n          <div className={classes.section}>\r\n            <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\r\n            <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n            <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\r\n            <Typography variant=\"h6\">Created by: {post.name}</Typography>\r\n            <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\r\n            <Divider style={{ margin: '20px 0' }} />\r\n            <CommentSection post={post} />\r\n            <Divider style={{ margin: '20px 0' }} />\r\n          </div>\r\n          <div className={classes.imageSection}>\r\n            <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Recommended Posts */}\r\n        {recommendedPosts.length && (\r\n          <div className={classes.section}>\r\n            <Typography gutterBottom variant='h5'>You might also like:</Typography>\r\n            <Divider/>\r\n            <div className={classes.recommendedPosts}>\r\n              {recommendedPosts.map(({ title,message,name,likes,selectedFile,_id }) => (\r\n                <div style={{ margin: '20px', cursor: 'pointer' }} onClick={() => openPost(_id)} key={_id}>\r\n                  <Typography gutterBottom variant='h6'>{title}</Typography>\r\n                  <Typography gutterBottom variant='subtitle2'>{name}</Typography>\r\n                  <Typography gutterBottom variant='subtitle2'>{message}</Typography>\r\n                  <Typography gutterBottom variant='subtitle1'>Likes: {likes.length}</Typography>\r\n                  <img src={selectedFile} width=\"200px\" />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n      </Paper>\r\n  )\r\n}\r\n\r\nexport default PostDetails","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  media: {\r\n    borderRadius: '20px',\r\n    objectFit: 'cover',\r\n    width: '100%',\r\n    maxHeight: '600px',\r\n  },\r\n  \r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(2),\r\n  },\r\n  \r\n}));","import React from 'react';\r\nimport useStyles from './styles';\r\n// import {Card,CardActions,CardMedia,Button,Typography, CardContent, ButtonBase} from '@material-ui/core';\r\nimport { Paper } from '@material-ui/core';\r\nimport errorImage from '../../images/404_error.jpg';\r\n\r\nconst ErrorPage = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n        <Paper className={classes.paper}>\r\n        <img src={errorImage} alt=\"React Logo\" />\r\n        </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorPage","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { BrowserRouter,Switch,Route,Redirect } from 'react-router-dom';\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\n\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Home from './components/Home/Home';\r\nimport Auth from './components/Auth/Auth';\r\nimport PostDetails from './components/PostDetails/PostDetails';\r\nimport ErrorPage from './components/ErrorPage/ErrorPage';\r\n\r\n// Grow -> provides some animation.\r\n// Grid -> Used to make responsive grid layout.\r\nconst App = () => {\r\n\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    return (\r\n        // BrowserRouter -> keep your UI in sync with the URL.It is a parent component\r\n        // to store all other component.\r\n        <GoogleOAuthProvider clientId=\"54651485527-jnilbeqog1rmnvsfotdeosnb9pv5tcrh.apps.googleusercontent.com\">\r\n            <BrowserRouter>\r\n                <Container maxWidth=\"xl\">\r\n                    <Navbar />\r\n                    {/* Either show the home or the Auth. */}\r\n                    {/* Renders the first child <Route> that matches the location. */}\r\n                    <Switch>\r\n                        {/* If user type '/auth' in url -> send user to Auth page. */}\r\n                        {/* If we try to visit '/' then it automatically redirect to '/posts'*/}\r\n                        <Route path='/' exact component={() => <Redirect to=\"/posts\" />} />\r\n                        <Route path='/posts' exact component={Home} />\r\n                        {/* Render home page when we want to search something. */}\r\n                        <Route path='/posts/search' exact component={Home} />\r\n                        <Route path='/posts/:id' component={PostDetails} />\r\n                        {/* If I am signed In then redirect directly to /posts/, else\r\n                        redirect to signIn page. */}\r\n                        <Route path='/auth' exact component={() => (!user ? <Auth/> : <Redirect to=\"/posts/\"/>)} />\r\n                        <Route><ErrorPage/></Route>\r\n                    </Switch>\r\n                </Container>\r\n            </BrowserRouter>\r\n        </GoogleOAuthProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n// shlok","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {createStore,applyMiddleware,compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\n// thunk middleware gives ability to action-creater to return a function\n// instead of an action object.\n// thunk acts as a middleware function through which one can access their state\n// access store, and dispatch new CardActions.\n\nimport App from './App';\nimport './index.css';\n// import { CardActions } from '@material-ui/core';\n\n// See index.js in reducers folder to check all reducers.\nconst store = createStore(reducers,compose(applyMiddleware(thunk)))\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App/>\n    </Provider>\n,document.getElementById('root'));"],"sourceRoot":""}